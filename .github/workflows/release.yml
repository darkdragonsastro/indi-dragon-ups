name: Semantic Release

on:
  push:
    branches:
      - main

jobs:
  semantic-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          token: ${{ secrets.GH_TOKEN }}
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          dry_run: false
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
            @semantic-release/exec
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          token: ${{ secrets.GH_TOKEN }}
          ref: 'v${{ steps.semantic.outputs.new_release_version }}'
      - name: Get Notes
        if: steps.semantic.outputs.new_release_published == 'true'
        id: get_notes
        run: |
          NOTES=$(git show -1 --no-notes --no-patch | tail +9 | sed -e 's/^[[:space:]]*//')
          echo "${NOTES}"
          NOTES="${NOTES//'%'/'%25'}"
          NOTES="${NOTES//$'\n'/'%0A'}"
          NOTES="${NOTES//$'\r'/'%0D'}"
          echo ::set-output name=NOTES::"${NOTES}"
      - name: Create Release
        if: steps.semantic.outputs.new_release_published == 'true'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          body: ${{ steps.get_notes.outputs.NOTES }}
      - name: Dispatch build-trigger
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          event-type: build-trigger
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "release": { "id": "${{ steps.create_release.outputs.id }}", "html_url": "${{ steps.create_release.outputs.html_url }}", "upload_url": "${{ steps.create_release.outputs.upload_url }}" }}'
